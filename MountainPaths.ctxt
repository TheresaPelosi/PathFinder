#BlueJ class context
comment0.target=MountainPaths
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment2.params=S\ numRows\ numCols
comment2.target=int[][]\ read(java.util.Scanner,\ int,\ int)
comment2.text=\r\n\ @param\ S\ a\ Scanner\ instantiated\ and\ pointing\ at\ a\ file\r\n\ @param\ numRows\ the\ number\ of\ rows\ represented\ in\ the\ file\r\n\ @param\ numCols\ the\ number\ of\ cols\ represented\ in\ the\ file\r\n\ @return\ a\ 2D\ array\ (rows\ x\ cols)\ of\ the\ data\ from\ the\ file\ read\r\n
comment3.params=grid
comment3.target=int\ findMinValue(int[][])
comment3.text=\r\n\ @param\ grid\ a\ 2D\ array\ from\ which\ you\ want\ to\ find\ the\ smallest\ value\r\n\ @return\ the\ smallest\ value\ in\ the\ given\ 2D\ array\r\n
comment4.params=grid
comment4.target=int\ findMaxValue(int[][])
comment4.text=\r\n\ @param\ grid\ a\ 2D\ array\ from\ which\ you\ want\ to\ find\ the\ largest\ value\r\n\ @return\ the\ largest\ value\ in\ the\ given\ 2D\ array\r\n
comment5.params=g\ grid
comment5.target=void\ drawMap(java.awt.Graphics,\ int[][])
comment5.text=\r\n\ Given\ a\ 2D\ array\ of\ elevation\ data\ create\ a\ image\ of\ size\ rows\ x\ cols,\ \r\n\ drawing\ a\ 1x1\ rectangle\ for\ each\ value\ in\ the\ array\ whose\ color\ is\ set\r\n\ to\ a\ a\ scaled\ gray\ value\ (0-255).\ \ Note\:\ to\ scale\ the\ values\ in\ the\ array\ \r\n\ to\ 0-255\ you\ must\ find\ the\ min\ and\ max\ values\ in\ the\ original\ data\ first.\r\n\ @param\ g\ a\ Graphics\ context\ to\ use\r\n\ @param\ grid\ a\ 2D\ array\ of\ the\ data\r\n
comment6.params=grid\ col
comment6.target=int\ indexOfMinInCol(int[][],\ int)
comment6.text=\r\n\ Scan\ a\ single\ column\ of\ a\ 2D\ array\ and\ return\ the\ index\ of\ the\r\n\ row\ that\ contains\ the\ smallest\ value\r\n\ @param\ grid\ a\ 2D\ array\r\n\ @col\ the\ column\ in\ the\ 2D\ array\ to\ process\r\n\ @return\ the\ index\ of\ smallest\ value\ from\ grid\ at\ the\ given\ col\r\n
comment7.params=g\ grid\ row
comment7.target=int\ drawLowestElevPath(java.awt.Graphics,\ int[][],\ int)
comment7.text=\r\n\ Find\ the\ minimum\ elevation-change\ route\ from\ West-to-East\ in\ the\ given\ grid,\ from\ the\r\n\ given\ starting\ row,\ and\ draw\ it\ using\ the\ given\ graphics\ context\r\n\ @param\ g\ -\ the\ graphics\ context\ to\ use\r\n\ @param\ grid\ -\ the\ 2D\ array\ of\ elevation\ values\r\n\ @param\ row\ -\ the\ starting\ row\ for\ traversing\ to\ find\ the\ min\ path\r\n\ @return\ total\ elevation\ of\ the\ route\r\n
comment8.params=g\ grid
comment8.target=int\ indexOfLowestElevPath(java.awt.Graphics,\ int[][])
comment8.text=\r\n\ Generate\ all\ west-to-east\ paths,\ find\ the\ one\ with\ the\ lowest\ total\ elevation\ change,\r\n\ and\ return\ the\ index\ of\ the\ row\ that\ path\ starts\ on.\r\n\ @param\ g\ -\ the\ graphics\ context\ to\ use\r\n\ @param\ grid\ -\ the\ 2D\ array\ of\ elevation\ values\r\n\ @return\ the\ index\ of\ the\ row\ where\ the\ lowest\ elevation-change\ path\ starts.\r\n
numComments=9
